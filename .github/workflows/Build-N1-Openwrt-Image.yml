#定义工作流名字
name: Build-N1-Openwrt-Image

#前置条件
on:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 0

#环境常量
env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: build.config
  DIY_SH: diy.sh
  TZ: Asia/Shanghai
  RELEASE: true
  FLIPPY_NAME: 66+o
  RELEASE_NAME: N1-Openwrt-66+o.img

#开始工作流
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:

      #检查cpu
    - name: Check CPU
      id: checkcpu
      run: |      
        cpu_model=`cat /proc/cpuinfo  |grep 'model name' |gawk -F : '{print $2}' | uniq -c  | sed 's/^ \+[0-9]\+ //g'`
        echo "cpu model: $cpu_model "
        e5CPU="E5"
        if [[ $cpu_model =~ $e5CPU ]]
        then
            echo "::set-output name=status::cancel"
        fi

      #若cpu不符合则取消工作流
    - name: Cancelling
      if: steps.checkcpu.outputs.status == 'cancel'
      uses: andymckay/cancel-action@0.2
      
      #检出自身仓库
    - name: Checkout
      uses: actions/checkout@main

      #初始化编译环境
    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004) tree
        sudo -E apt-get -qq install xz-utils btrfs-progs gawk zip unzip curl dosfstools  uuid-runtime
        sudo -E apt-get -qq install git  git-core
        sudo -E apt-get -qq install pigz
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        sudo mkdir -p /upload
        sudo chown $USER:$GROUPS /upload
        cd /upload
        echo "UPLOAD=$PWD" >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV

      #克隆编译源代码
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt 
        cd openwrt

      #更新并安装Feeds
    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
      
      #加载自定义配置
    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH        
     
      #下载杂项
    - name: Download Misc
      id: download
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

      #等待ssh连接
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh >= 1)
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      #开始编译固件
    - name: Compile Firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        cp .config ${UPLOAD}/build.config
        cd bin/targets/*/*
        cp openwrt-armvirt-64-default-rootfs.tar.gz  ${UPLOAD}/openwrt-armvirt-64-default-rootfs.tar.gz
        count=` find -name '*.xz' | wc -l `
        if [  $count -gt 0 ] ; then
            cp -r *.xz ${UPLOAD}/
        fi
        echo "::set-output name=status::true"    
        
      #等待ssh连接
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh >= 2)
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      #固件打包刷机镜像包
    - name: Packing Img
      id: packing
      if: steps.compile.outputs.status == 'true' && env.RELEASE == 'true' && !cancelled()
      run: |
        cp -r ${FLIPPY_NAME}/opt/* /opt
        cd /opt/kernel
        mv ${UPLOAD}/openwrt-armvirt-64-default-rootfs.tar.gz .
        sudo chmod  -R 777 /opt
        sudo ./mk_s905d_n1.sh
        sudo cp files/openwrt-update-amlogic ${UPLOAD}/openwrt-update-amlogic
        cd /opt/kernel/tmp
        sudo pigz -9 $RELEASE_NAME
        mv ./* ${UPLOAD}/
        echo "::set-output name=status::true"    

      #等待ssh连接
    - name: SSH connection to Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh >= 3)
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      #创建发布
    - name: Create release
      if: steps.packing.outputs.status == 'true' && env.RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} 🚀 / N1-Openwrt | 编译
        allowUpdates: true
        tag: ${{ env.tag_name }}
        commit: master
        token: ${{ secrets.RELEASES_TOKEN  }}
        body: |
          默认IP：192.168.31.2 默认密码： password
          全新刷入emmc方法：
             1. 固件刷入U盘。
             2. cd root
             3. ./install-to-emmc.sh
             4. 拔掉U盘，断电重启。
             
          在线升级方法：
             1. cd /mnt/mmcblk2p4
             2. wget 升级脚本链接,鼠标右击openwrt-update-amlogic 文件获取链接地址
             3. wget img.gz后缀名的固件链接,鼠标右击后缀.img.gz文件获取链接地址
             4. gzip -d 解压缩上一步下载的固件全名
             5. chmod +x openwrt-update-amlogic
             6. ./openwrt-update-amlogic后，选择y是保留配置升级，选N相当于重装。
             7.升级完成后系统会自动重启，稍安勿躁。
        artifacts:  ${{ env.UPLOAD }}/*
        
      #删除旧的发布
    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 10
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASES_TOKEN }}
